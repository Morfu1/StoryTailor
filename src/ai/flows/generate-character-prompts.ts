// Use server directive
'use server';

/**
 * @fileOverview Generates character, item, and location prompts based on a given script,
 * formatted as visual descriptions for text-to-image AI models.
 *
 * - generateCharacterPrompts - A function that generates character, item, and location visual prompts.
 * - GenerateCharacterPromptsInput - The input type for the generateCharacterPrompts function.
 * - GenerateCharacterPromptsOutput - The output type for the generateCharacterPrompts function.
 */

import {ai} from '@/ai/genkit';
import {z}from 'genkit';

const GenerateCharacterPromptsInputSchema = z.object({
  script: z.string().describe('The main script of the story.'),
});
export type GenerateCharacterPromptsInput = z.infer<typeof GenerateCharacterPromptsInputSchema>;

const GenerateCharacterPromptsOutputSchema = z.object({
  characterPrompts: z.string().describe('A string containing visual descriptions for characters, formatted for text-to-image models. Each character starts with its name on a new line, followed by its description. Entities are separated by a blank line. Example: "Character Prompts:\\nRusty\\na sleek 3yo red fox...\\n\\nOwl\\nan aged 15yo owl..."'),
  itemPrompts: z.string().describe('A string containing visual descriptions for items, formatted for text-to-image models. Each item starts with its name on a new line, followed by its description. Entities are separated by a blank line. Example: "Item Prompts:\\nSatchel\\na compact bag crafted from woven ferns..."'),
  locationPrompts: z.string().describe('A string containing visual descriptions for locations, formatted for text-to-image models. Each location starts with its name on a new line, followed by its description. Entities are separated by a blank line. Example: "Location Prompts:\\nForest\\nan expansive woodland of ancient oaks..."'),
});
export type GenerateCharacterPromptsOutput = z.infer<typeof GenerateCharacterPromptsOutputSchema>;

export async function generateCharacterPrompts(
  input: GenerateCharacterPromptsInput
): Promise<GenerateCharacterPromptsOutput> {
  return generateCharacterPromptsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateCharacterPromptsPrompt',
  input: {schema: GenerateCharacterPromptsInputSchema},
  output: {schema: GenerateCharacterPromptsOutputSchema},
  prompt: `You are an expert prompt engineer specializing in creating descriptions for text-to-image AI models.
Based on the following story script, generate detailed visual descriptions for the main characters, key items, and important locations.
These descriptions will be used as prompts for an AI image generator (e.g., DALL-E, Midjourney, Flux Dex model) to create visuals for the story.

Script:
{{{script}}}

Instructions for output:
1.  For each category (Characters, Items, Locations), provide a heading (e.g., "Character Prompts:", "Item Prompts:", "Location Prompts:"). This heading should be part of the string for that category.
2.  Under each heading, list the entities. For each entity:
    *   First line: The name of the character, item, or location.
    *   Subsequent lines: A detailed visual description suitable for a text-to-image model. Focus on visual attributes, appearance, attire, textures, age, and any defining features. Be concise but descriptive.
3.  Ensure a blank line separates each entity's full entry (name + description) from the next entity within the same category.

Example of desired output format and style (the content below should be generated by you based on the script, this is just a style example):

Character Prompts:
Rusty
a sleek 3yo red fox with bright copper fur and amber eyes, wearing a woven fern satchel.

Owl
an aged 15yo white and brown owl with mottled plumage and a tattered olive-green cloak.

Squirrel
a small 2yo grey tree squirrel with short, fluffy fur and a vibrant blue scarf.

Item Prompts:
Satchel
a compact bag crafted from woven ferns with a natural green texture.

Glowstone
a tiny radiant pebble that shimmers like a miniature sun with warm, glowing facets.

Location Prompts:
Forest
an expansive woodland of ancient oaks and towering evergreens, dappled with soft sunlight.

Stream
a bubbling, clear water stream with mossy banks and sunlight glints on its surface.

Twisting Cave
a narrow, winding cavern with irregular rock formations and glistening, shadowed walls.

Now, generate the character, item, and location prompts based on the provided script, adhering strictly to the format and style exemplified above.
`,
});

const generateCharacterPromptsFlow = ai.defineFlow(
  {
    name: 'generateCharacterPromptsFlow',
    inputSchema: GenerateCharacterPromptsInputSchema,
    outputSchema: GenerateCharacterPromptsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    // Ensure the output is not null and adheres to the schema.
    // The LLM should return an object with characterPrompts, itemPrompts, and locationPrompts strings.
    if (!output || typeof output.characterPrompts !== 'string' || typeof output.itemPrompts !== 'string' || typeof output.locationPrompts !== 'string') {
        // Fallback or error handling if the LLM output is not as expected.
        // For simplicity, returning potentially partial or empty results, but logging an error.
        console.error("LLM output for generateCharacterPromptsFlow did not match the expected schema:", output);
        return {
            characterPrompts: output?.characterPrompts || "",
            itemPrompts: output?.itemPrompts || "",
            locationPrompts: output?.locationPrompts || "",
        };
    }
    return output;
  }
);

